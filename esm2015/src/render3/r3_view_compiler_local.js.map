{"version":3,"file":"r3_view_compiler_local.js","sourceRoot":"","sources":["../../../../../packages/compiler/src/render3/r3_view_compiler_local.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDiDependencyMetadata, CompileDirectiveMetadata, CompileQueryMetadata, CompileTypeMetadata, flatten, identifierName, sanitizeIdentifier, tokenReference} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {BindingForm, BuiltinFunctionCall, LocalResolver, convertActionBinding, convertPropertyBinding} from '../compiler_util/expression_converter';\nimport {ConstantPool, DefinitionKind} from '../constant_pool';\nimport * as core from '../core';\nimport {AST, AstMemoryEfficientTransformer, BindingPipe, BoundElementBindingType, FunctionCall, ImplicitReceiver, LiteralArray, LiteralMap, LiteralPrimitive, PropertyRead} from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport {ParseSourceSpan, typeSourceSpan} from '../parse_util';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {BindingParser} from '../template_parser/binding_parser';\nimport {OutputContext, error} from '../util';\n\nimport * as t from './r3_ast';\nimport {Identifiers as R3} from './r3_identifiers';\n\n\n\n/** Name of the context parameter passed into a template function */\nconst CONTEXT_NAME = 'ctx';\n\n/** Name of the RenderFlag passed into a template function */\nconst RENDER_FLAGS = 'rf';\n\n/** Name of the temporary to use during data binding */\nconst TEMPORARY_NAME = '_t';\n\n/** The prefix reference variables */\nconst REFERENCE_PREFIX = '_r';\n\n/** The name of the implicit context reference */\nconst IMPLICIT_REFERENCE = '$implicit';\n\n/** Name of the i18n attributes **/\nconst I18N_ATTR = 'i18n';\nconst I18N_ATTR_PREFIX = 'i18n-';\n\n/** I18n separators for metadata **/\nconst MEANING_SEPARATOR = '|';\nconst ID_SEPARATOR = '@@';\n\nexport function compileDirective(\n    outputCtx: OutputContext, directive: CompileDirectiveMetadata, reflector: CompileReflector,\n    bindingParser: BindingParser) {\n  const definitionMapValues: {key: string, quoted: boolean, value: o.Expression}[] = [];\n\n  const field = (key: string, value: o.Expression | null) => {\n    if (value) {\n      definitionMapValues.push({key, value, quoted: false});\n    }\n  };\n\n  // e.g. `type: MyDirective`\n  field('type', outputCtx.importExpr(directive.type.reference));\n\n  // e.g. `selectors: [['', 'someDir', '']]`\n  field('selectors', createDirectiveSelector(directive.selector !));\n\n  // e.g. `factory: () => new MyApp(injectElementRef())`\n  field('factory', createFactory(directive.type, outputCtx, reflector, directive.queries));\n\n  // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n  field('hostBindings', createHostBindingsFunction(directive, outputCtx, bindingParser));\n\n  // e.g. `attributes: ['role', 'listbox']`\n  field('attributes', createHostAttributesArray(directive, outputCtx));\n\n  // e.g 'inputs: {a: 'a'}`\n  field('inputs', conditionallyCreateMapObjectLiteral(directive.inputs));\n\n  // e.g 'outputs: {a: 'a'}`\n  field('outputs', conditionallyCreateMapObjectLiteral(directive.outputs));\n\n  const className = identifierName(directive.type) !;\n  className || error(`Cannot resolver the name of ${directive.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Directive);\n  const definitionFunction =\n      o.importExpr(R3.defineDirective).callFn([o.literalMap(definitionMapValues)]);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      className, null,\n      [new o.ClassField(\n          definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], definitionFunction)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\nexport function compileComponent(\n    outputCtx: OutputContext, component: CompileDirectiveMetadata, nodes: t.Node[],\n    hasNgContent: boolean, ngContentSelectors: string[], reflector: CompileReflector,\n    bindingParser: BindingParser, directiveTypeBySel: Map<string, any>,\n    pipeTypeByName: Map<string, any>) {\n  const definitionMapValues: {key: string, quoted: boolean, value: o.Expression}[] = [];\n\n  const field = (key: string, value: o.Expression | null) => {\n    if (value) {\n      definitionMapValues.push({key, value, quoted: false});\n    }\n  };\n\n  // Generate the CSS matcher that recognize directive\n  let directiveMatcher: SelectorMatcher|null = null;\n\n  if (directiveTypeBySel.size) {\n    const matcher = new SelectorMatcher();\n    directiveTypeBySel.forEach((staticType: any, selector: string) => {\n      matcher.addSelectables(CssSelector.parse(selector), staticType);\n    });\n    directiveMatcher = matcher;\n  }\n\n  // Directives and Pipes used from the template\n  const directives = new Set<any>();\n  const pipes = new Set<any>();\n\n  // e.g. `type: MyApp`\n  field('type', outputCtx.importExpr(component.type.reference));\n\n  // e.g. `selectors: [['my-app']]`\n  field('selectors', createDirectiveSelector(component.selector !));\n\n  const selector = component.selector && CssSelector.parse(component.selector);\n  const firstSelector = selector && selector[0];\n\n  // e.g. `attr: [\"class\", \".my.app\"]`\n  // This is optional an only included if the first selector of a component specifies attributes.\n  if (firstSelector) {\n    const selectorAttributes = firstSelector.getAttrs();\n    if (selectorAttributes.length) {\n      field(\n          'attrs', outputCtx.constantPool.getConstLiteral(\n                       o.literalArr(selectorAttributes.map(\n                           value => value != null ? o.literal(value) : o.literal(undefined))),\n                       /* forceShared */ true));\n    }\n  }\n\n  // e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`\n  field('factory', createFactory(component.type, outputCtx, reflector, component.queries));\n\n  // e.g `hostBindings: function MyApp_HostBindings { ... }\n  field('hostBindings', createHostBindingsFunction(component, outputCtx, bindingParser));\n\n  // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n  const templateTypeName = component.type.reference.name;\n  const templateName = templateTypeName ? `${templateTypeName}_Template` : null;\n\n  const templateFunctionExpression =\n      new TemplateDefinitionBuilder(\n          outputCtx, outputCtx.constantPool, reflector, CONTEXT_NAME, BindingScope.ROOT_SCOPE, 0,\n          templateTypeName, templateName, component.viewQueries, directiveMatcher, directives,\n          pipeTypeByName, pipes)\n          .buildTemplateFunction(nodes, [], hasNgContent, ngContentSelectors);\n\n  field('template', templateFunctionExpression);\n\n  // e.g. `directives: [MyDirective]`\n  if (directives.size) {\n    const expressions = Array.from(directives).map(d => outputCtx.importExpr(d));\n    field('directives', o.literalArr(expressions));\n  }\n\n  // e.g. `pipes: [MyPipe]`\n  if (pipes.size) {\n    const expressions = Array.from(pipes).map(d => outputCtx.importExpr(d));\n    field('pipes', o.literalArr(expressions));\n  }\n\n  // e.g `inputs: {a: 'a'}`\n  field('inputs', conditionallyCreateMapObjectLiteral(component.inputs));\n\n  // e.g 'outputs: {a: 'a'}`\n  field('outputs', conditionallyCreateMapObjectLiteral(component.outputs));\n\n  // e.g. `features: [NgOnChangesFeature(MyComponent)]`\n  const features: o.Expression[] = [];\n  if (component.type.lifecycleHooks.some(lifecycle => lifecycle == LifecycleHooks.OnChanges)) {\n    features.push(o.importExpr(R3.NgOnChangesFeature, null, null).callFn([outputCtx.importExpr(\n        component.type.reference)]));\n  }\n  if (features.length) {\n    field('features', o.literalArr(features));\n  }\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Component);\n  const definitionFunction =\n      o.importExpr(R3.defineComponent).callFn([o.literalMap(definitionMapValues)]);\n  const className = identifierName(component.type) !;\n  className || error(`Cannot resolver the name of ${component.type}`);\n\n  // Create the partial class to be merged with the actual class.\n  outputCtx.statements.push(new o.ClassStmt(\n      className, null,\n      [new o.ClassField(\n          definitionField, o.INFERRED_TYPE, [o.StmtModifier.Static], definitionFunction)],\n      [], new o.ClassMethod(null, [], []), []));\n}\n\nfunction unsupported(feature: string): never {\n  if (this) {\n    throw new Error(`Builder ${this.constructor.name} doesn't support ${feature} yet`);\n  }\n  throw new Error(`Feature ${feature} is not supported yet`);\n}\n\nconst BINDING_INSTRUCTION_MAP: {[type: number]: o.ExternalReference} = {\n  [BoundElementBindingType.Property]: R3.elementProperty,\n  [BoundElementBindingType.Attribute]: R3.elementAttribute,\n  [BoundElementBindingType.Class]: R3.elementClassNamed,\n  [BoundElementBindingType.Style]: R3.elementStyleNamed,\n};\n\nfunction interpolate(args: o.Expression[]): o.Expression {\n  args = args.slice(1);  // Ignore the length prefix added for render2\n  switch (args.length) {\n    case 3:\n      return o.importExpr(R3.interpolation1).callFn(args);\n    case 5:\n      return o.importExpr(R3.interpolation2).callFn(args);\n    case 7:\n      return o.importExpr(R3.interpolation3).callFn(args);\n    case 9:\n      return o.importExpr(R3.interpolation4).callFn(args);\n    case 11:\n      return o.importExpr(R3.interpolation5).callFn(args);\n    case 13:\n      return o.importExpr(R3.interpolation6).callFn(args);\n    case 15:\n      return o.importExpr(R3.interpolation7).callFn(args);\n    case 17:\n      return o.importExpr(R3.interpolation8).callFn(args);\n  }\n  (args.length >= 19 && args.length % 2 == 1) ||\n      error(`Invalid interpolation argument length ${args.length}`);\n  return o.importExpr(R3.interpolationV).callFn([o.literalArr(args)]);\n}\n\n// Pipes always have at least one parameter, the value they operate on\nconst pipeBindingIdentifiers = [R3.pipeBind1, R3.pipeBind2, R3.pipeBind3, R3.pipeBind4];\n\nfunction pipeBinding(args: o.Expression[]): o.ExternalReference {\n  return pipeBindingIdentifiers[args.length] || R3.pipeBindV;\n}\n\nconst pureFunctionIdentifiers = [\n  R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n  R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\nfunction getLiteralFactory(\n    outputContext: OutputContext, literal: o.LiteralArrayExpr | o.LiteralMapExpr): o.Expression {\n  const {literalFactory, literalFactoryArguments} =\n      outputContext.constantPool.getLiteralFactory(literal);\n  literalFactoryArguments.length > 0 || error(`Expected arguments to a literal factory function`);\n  let pureFunctionIdent =\n      pureFunctionIdentifiers[literalFactoryArguments.length] || R3.pureFunctionV;\n\n  // Literal factories are pure functions that only need to be re-invoked when the parameters\n  // change.\n  return o.importExpr(pureFunctionIdent).callFn([literalFactory, ...literalFactoryArguments]);\n}\n\nfunction noop() {}\n\n/**\n * Function which is executed whenever a variable is referenced for the first time in a given\n * scope.\n *\n * It is expected that the function creates the `const localName = expression`; statement.\n */\ntype DeclareLocalVarCallback = (lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => void;\n\nclass BindingScope implements LocalResolver {\n  /**\n   * Keeps a map from local variables to their expressions.\n   *\n   * This is used when one refers to variable such as: 'let abc = a.b.c`.\n   * - key to the map is the string literal `\"abc\"`.\n   * - value `lhs` is the left hand side which is an AST representing `abc`.\n   * - value `rhs` is the right hand side which is an AST representing `a.b.c`.\n   * - value `declared` is true if the `declareLocalVarCallback` has been called for this scope\n   * already.\n   */\n  private map = new Map < string, {\n    lhs: o.ReadVarExpr;\n    rhs: o.Expression|undefined;\n    declared: boolean;\n  }\n  > ();\n  private referenceNameIndex = 0;\n\n  static ROOT_SCOPE = new BindingScope().set('$event', o.variable('$event'));\n\n  private constructor(\n      private parent: BindingScope|null = null,\n      private declareLocalVarCallback: DeclareLocalVarCallback = noop) {}\n\n  get(name: string): o.Expression|null {\n    let current: BindingScope|null = this;\n    while (current) {\n      let value = current.map.get(name);\n      if (value != null) {\n        if (current !== this) {\n          // make a local copy and reset the `declared` state.\n          value = {lhs: value.lhs, rhs: value.rhs, declared: false};\n          // Cache the value locally.\n          this.map.set(name, value);\n        }\n        if (value.rhs && !value.declared) {\n          // if it is first time we are referencing the variable in the scope\n          // than invoke the callback to insert variable declaration.\n          this.declareLocalVarCallback(value.lhs, value.rhs);\n          value.declared = true;\n        }\n        return value.lhs;\n      }\n      current = current.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Create a local variable for later reference.\n   *\n   * @param name Name of the variable.\n   * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n   * @param rhs AST representing the right hand side of the `let lhs = rhs;`. The `rhs` can be\n   * `undefined` for variable that are ambient such as `$event` and which don't have `rhs`\n   * declaration.\n   */\n  set(name: string, lhs: o.ReadVarExpr, rhs?: o.Expression): BindingScope {\n    !this.map.has(name) ||\n        error(`The name ${name} is already defined in scope to be ${this.map.get(name)}`);\n    this.map.set(name, {lhs: lhs, rhs: rhs, declared: false});\n    return this;\n  }\n\n  getLocal(name: string): (o.Expression|null) { return this.get(name); }\n\n  nestedScope(declareCallback: DeclareLocalVarCallback): BindingScope {\n    return new BindingScope(this, declareCallback);\n  }\n\n  freshReferenceName(): string {\n    let current: BindingScope = this;\n    // Find the top scope as it maintains the global reference count\n    while (current.parent) current = current.parent;\n    const ref = `${REFERENCE_PREFIX}${current.referenceNameIndex++}`;\n    return ref;\n  }\n}\n\n// Pasted from render3/interfaces/definition since it cannot be referenced directly\n/**\n * Flags passed into template functions to determine which blocks (i.e. creation, update)\n * should be executed.\n *\n * Typically, a template runs both the creation block and the update block on initialization and\n * subsequent runs only execute the update block. However, dynamically created views require that\n * the creation block be executed separately from the update block (for backwards compat).\n */\n// TODO(vicb): move to ../core\nexport const enum RenderFlags {\n  /* Whether to run the creation block (e.g. create elements and directives) */\n  Create = 0b01,\n\n  /* Whether to run the update block (e.g. refresh bindings) */\n  Update = 0b10\n}\n\nclass TemplateDefinitionBuilder implements t.Visitor<void>, LocalResolver {\n  private _dataIndex = 0;\n  private _bindingContext = 0;\n  private _prefixCode: o.Statement[] = [];\n  private _creationCode: o.Statement[] = [];\n  private _variableCode: o.Statement[] = [];\n  private _bindingCode: o.Statement[] = [];\n  private _postfixCode: o.Statement[] = [];\n  private _temporary = temporaryAllocator(this._prefixCode, TEMPORARY_NAME);\n  private _projectionDefinitionIndex = -1;\n  private _valueConverter: ValueConverter;\n  private _unsupported = unsupported;\n  private _bindingScope: BindingScope;\n\n  // Whether we are inside a translatable element (`<p i18n>... somewhere here ... </p>)\n  private _inI18nSection: boolean = false;\n  private _i18nSectionIndex = -1;\n  // Maps of placeholder to node indexes for each of the i18n section\n  private _phToNodeIdxes: {[phName: string]: number[]}[] = [{}];\n\n  constructor(\n      private outputCtx: OutputContext, private constantPool: ConstantPool,\n      private reflector: CompileReflector, private contextParameter: string,\n      parentBindingScope: BindingScope, private level = 0, private contextName: string|null,\n      private templateName: string|null, private viewQueries: CompileQueryMetadata[],\n      private directiveMatcher: SelectorMatcher|null, private directives: Set<any>,\n      private pipeTypeByName: Map<string, any>, private pipes: Set<any>) {\n    this._bindingScope =\n        parentBindingScope.nestedScope((lhsVar: o.ReadVarExpr, expression: o.Expression) => {\n          this._bindingCode.push(\n              lhsVar.set(expression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        });\n    this._valueConverter = new ValueConverter(\n        outputCtx, () => this.allocateDataSlot(), (name, localName, slot, value: o.ReadVarExpr) => {\n          const pipeType = pipeTypeByName.get(name);\n          if (pipeType) {\n            this.pipes.add(pipeType);\n          }\n          this._bindingScope.set(localName, value);\n          this._creationCode.push(\n              o.importExpr(R3.pipe).callFn([o.literal(slot), o.literal(name)]).toStmt());\n        });\n  }\n\n  buildTemplateFunction(\n      nodes: t.Node[], variables: t.Variable[], hasNgContent: boolean = false,\n      ngContentSelectors: string[] = []): o.FunctionExpr {\n    // Create variable bindings\n    for (const variable of variables) {\n      const variableName = variable.name;\n      const expression =\n          o.variable(this.contextParameter).prop(variable.value || IMPLICIT_REFERENCE);\n      const scopedName = this._bindingScope.freshReferenceName();\n      // Add the reference to the local scope.\n      this._bindingScope.set(variableName, o.variable(variableName + scopedName), expression);\n    }\n\n    // Output a `ProjectionDef` instruction when some `<ng-content>` are present\n    if (hasNgContent) {\n      this._projectionDefinitionIndex = this.allocateDataSlot();\n      const parameters: o.Expression[] = [o.literal(this._projectionDefinitionIndex)];\n\n      // Only selectors with a non-default value are generated\n      if (ngContentSelectors.length > 1) {\n        const r3Selectors = ngContentSelectors.map(s => core.parseSelectorToR3Selector(s));\n        // `projectionDef` needs both the parsed and raw value of the selectors\n        const parsed = this.outputCtx.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n        const unParsed =\n            this.outputCtx.constantPool.getConstLiteral(asLiteral(ngContentSelectors), true);\n        parameters.push(parsed, unParsed);\n      }\n\n      this.instruction(this._creationCode, null, R3.projectionDef, ...parameters);\n    }\n\n    // Define and update any view queries\n    for (let query of this.viewQueries) {\n      // e.g. r3.Q(0, somePredicate, true);\n      const querySlot = this.allocateDataSlot();\n      const predicate = getQueryPredicate(query, this.outputCtx);\n      const args = [\n        o.literal(querySlot, o.INFERRED_TYPE),\n        predicate,\n        o.literal(query.descendants, o.INFERRED_TYPE),\n      ];\n\n      if (query.read) {\n        args.push(this.outputCtx.importExpr(query.read.identifier !.reference));\n      }\n      this.instruction(this._creationCode, null, R3.query, ...args);\n\n      // (r3.qR(tmp = r3.ɵld(0)) && (ctx.someDir = tmp));\n      const temporary = this._temporary();\n      const getQueryList = o.importExpr(R3.load).callFn([o.literal(querySlot)]);\n      const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n      const updateDirective = o.variable(CONTEXT_NAME)\n                                  .prop(query.propertyName)\n                                  .set(query.first ? temporary.prop('first') : temporary);\n      this._bindingCode.push(refresh.and(updateDirective).toStmt());\n    }\n\n    t.visitAll(this, nodes);\n\n    const creationCode = this._creationCode.length > 0 ?\n        [o.ifStmt(\n            o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(RenderFlags.Create), null, false),\n            this._creationCode)] :\n        [];\n\n    const updateCode = this._bindingCode.length > 0 ?\n        [o.ifStmt(\n            o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(RenderFlags.Update), null, false),\n            this._bindingCode)] :\n        [];\n\n    // Generate maps of placeholder name to node indexes\n    // TODO(vicb): This is a WIP, not fully supported yet\n    for (const phToNodeIdx of this._phToNodeIdxes) {\n      if (Object.keys(phToNodeIdx).length > 0) {\n        const scopedName = this._bindingScope.freshReferenceName();\n        const phMap = o.variable(scopedName)\n                          .set(mapToExpression(phToNodeIdx, true))\n                          .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n\n        this._prefixCode.push(phMap);\n      }\n    }\n\n    return o.fn(\n        [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(this.contextParameter, null)],\n        [\n          // Temporary variable declarations for query refresh (i.e. let _t: any;)\n          ...this._prefixCode,\n          // Creating mode (i.e. if (rf & RenderFlags.Create) { ... })\n          ...creationCode,\n          // Temporary variable declarations for local refs (i.e. const tmp = ld(1) as any)\n          ...this._variableCode,\n          // Binding and refresh mode (i.e. if (rf & RenderFlags.Update) {...})\n          ...updateCode,\n          // Nested templates (i.e. function CompTemplate() {})\n          ...this._postfixCode\n        ],\n        o.INFERRED_TYPE, null, this.templateName);\n  }\n\n  // LocalResolver\n  getLocal(name: string): o.Expression|null { return this._bindingScope.get(name); }\n\n  visitContent(ngContent: t.Content) {\n    const slot = this.allocateDataSlot();\n    const selectorIndex = ngContent.selectorIndex;\n    const parameters: o.Expression[] = [\n      o.literal(slot),\n      o.literal(this._projectionDefinitionIndex),\n    ];\n\n    const attributeAsList: string[] = [];\n\n    ngContent.attributes.forEach((attribute) => {\n      const name = attribute.name;\n      if (name !== 'select') {\n        attributeAsList.push(name, attribute.value);\n      }\n    });\n\n    if (attributeAsList.length > 0) {\n      parameters.push(o.literal(selectorIndex), asLiteral(attributeAsList));\n    } else if (selectorIndex !== 0) {\n      parameters.push(o.literal(selectorIndex));\n    }\n\n    this.instruction(this._creationCode, ngContent.sourceSpan, R3.projection, ...parameters);\n  }\n\n  visitElement(element: t.Element) {\n    const elementIndex = this.allocateDataSlot();\n    const referenceDataSlots = new Map<string, number>();\n    const wasInI18nSection = this._inI18nSection;\n\n    const outputAttrs: {[name: string]: string} = {};\n    const attrI18nMetas: {[name: string]: string} = {};\n    let i18nMeta: string = '';\n\n    // Elements inside i18n sections are replaced with placeholders\n    // TODO(vicb): nested elements are a WIP in this phase\n    if (this._inI18nSection) {\n      const phName = element.name.toLowerCase();\n      if (!this._phToNodeIdxes[this._i18nSectionIndex][phName]) {\n        this._phToNodeIdxes[this._i18nSectionIndex][phName] = [];\n      }\n      this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);\n    }\n\n    // Handle i18n attributes\n    for (const attr of element.attributes) {\n      const name = attr.name;\n      const value = attr.value;\n      if (name === I18N_ATTR) {\n        if (this._inI18nSection) {\n          throw new Error(\n              `Could not mark an element as translatable inside of a translatable section`);\n        }\n        this._inI18nSection = true;\n        this._i18nSectionIndex++;\n        this._phToNodeIdxes[this._i18nSectionIndex] = {};\n        i18nMeta = value;\n      } else if (name.startsWith(I18N_ATTR_PREFIX)) {\n        attrI18nMetas[name.slice(I18N_ATTR_PREFIX.length)] = value;\n      } else {\n        outputAttrs[name] = value;\n      }\n    }\n\n    // Match directives on non i18n attributes\n    if (this.directiveMatcher) {\n      const selector = createCssSelector(element.name, outputAttrs);\n      this.directiveMatcher.match(\n          selector, (sel: CssSelector, staticType: any) => { this.directives.add(staticType); });\n    }\n\n    // Element creation mode\n    const parameters: o.Expression[] = [\n      o.literal(elementIndex),\n      o.literal(element.name),\n    ];\n\n    // Add the attributes\n    const i18nMessages: o.Statement[] = [];\n    const attributes: o.Expression[] = [];\n    let hasI18nAttr = false;\n\n    Object.getOwnPropertyNames(outputAttrs).forEach(name => {\n      const value = outputAttrs[name];\n      attributes.push(o.literal(name));\n      if (attrI18nMetas.hasOwnProperty(name)) {\n        hasI18nAttr = true;\n        const meta = parseI18nMeta(attrI18nMetas[name]);\n        const variable = this.constantPool.getTranslation(value, meta);\n        attributes.push(variable);\n      } else {\n        attributes.push(o.literal(value));\n      }\n    });\n\n    let attrArg: o.Expression = o.TYPED_NULL_EXPR;\n\n    if (attributes.length > 0) {\n      attrArg = hasI18nAttr ? getLiteralFactory(this.outputCtx, o.literalArr(attributes)) :\n                              this.constantPool.getConstLiteral(o.literalArr(attributes), true);\n    }\n\n    parameters.push(attrArg);\n\n    if (element.references && element.references.length > 0) {\n      const references = flatten(element.references.map(reference => {\n        const slot = this.allocateDataSlot();\n        referenceDataSlots.set(reference.name, slot);\n        // Generate the update temporary.\n        const variableName = this._bindingScope.freshReferenceName();\n        this._variableCode.push(o.variable(variableName, o.INFERRED_TYPE)\n                                    .set(o.importExpr(R3.load).callFn([o.literal(slot)]))\n                                    .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        this._bindingScope.set(reference.name, o.variable(variableName));\n        return [reference.name, reference.value];\n      }));\n      parameters.push(this.constantPool.getConstLiteral(asLiteral(references), true));\n    } else {\n      parameters.push(o.TYPED_NULL_EXPR);\n    }\n\n    // Generate the instruction create element instruction\n    if (i18nMessages.length > 0) {\n      this._creationCode.push(...i18nMessages);\n    }\n    this.instruction(\n        this._creationCode, element.sourceSpan, R3.createElement, ...trimTrailingNulls(parameters));\n\n    const implicit = o.variable(CONTEXT_NAME);\n\n    // Generate Listeners (outputs)\n    element.outputs.forEach((outputAst: t.BoundEvent) => {\n      const elName = sanitizeIdentifier(element.name);\n      const evName = sanitizeIdentifier(outputAst.name);\n      const functionName = `${this.templateName}_${elName}_${evName}_listener`;\n      const localVars: o.Statement[] = [];\n      const bindingScope =\n          this._bindingScope.nestedScope((lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => {\n            localVars.push(\n                lhsVar.set(rhsExpression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n          });\n      const bindingExpr = convertActionBinding(\n          bindingScope, implicit, outputAst.handler, 'b', () => error('Unexpected interpolation'));\n      const handler = o.fn(\n          [new o.FnParam('$event', o.DYNAMIC_TYPE)], [...localVars, ...bindingExpr.render3Stmts],\n          o.INFERRED_TYPE, null, functionName);\n      this.instruction(\n          this._creationCode, outputAst.sourceSpan, R3.listener, o.literal(outputAst.name),\n          handler);\n    });\n\n\n    // Generate element input bindings\n    element.inputs.forEach((input: t.BoundAttribute) => {\n      if (input.type === BoundElementBindingType.Animation) {\n        this._unsupported('animations');\n      }\n      const convertedBinding = this.convertPropertyBinding(implicit, input.value);\n      const instruction = BINDING_INSTRUCTION_MAP[input.type];\n      if (instruction) {\n        // TODO(chuckj): runtime: security context?\n        const value = o.importExpr(R3.bind).callFn([convertedBinding]);\n        this.instruction(\n            this._bindingCode, input.sourceSpan, instruction, o.literal(elementIndex),\n            o.literal(input.name), value);\n      } else {\n        this._unsupported(`binding type ${input.type}`);\n      }\n    });\n\n    // Traverse element child nodes\n    if (this._inI18nSection && element.children.length == 1 &&\n        element.children[0] instanceof t.Text) {\n      const text = element.children[0] as t.Text;\n      this.visitSingleI18nTextChild(text, i18nMeta);\n    } else {\n      t.visitAll(this, element.children);\n    }\n\n    // Finish element construction mode.\n    this.instruction(\n        this._creationCode, element.endSourceSpan || element.sourceSpan, R3.elementEnd);\n\n    // Restore the state before exiting this node\n    this._inI18nSection = wasInI18nSection;\n  }\n\n  visitTemplate(template: t.Template) {\n    const templateIndex = this.allocateDataSlot();\n\n    let elName = '';\n    if (template.children.length === 1 && template.children[0] instanceof t.Element) {\n      // When the template as a single child, derive the context name from the tag\n      elName = sanitizeIdentifier((template.children[0] as t.Element).name);\n    }\n\n    const contextName = elName ? `${this.contextName}_${elName}` : '';\n\n    const templateName =\n        contextName ? `${contextName}_Template_${templateIndex}` : `Template_${templateIndex}`;\n\n    const templateContext = `ctx${this.level}`;\n\n    const parameters: o.Expression[] = [\n      o.literal(templateIndex),\n      o.variable(templateName),\n      o.TYPED_NULL_EXPR,\n    ];\n\n    const attributeNames: o.Expression[] = [];\n    const attributeMap: {[name: string]: string} = {};\n\n    template.attributes.forEach(a => {\n      attributeNames.push(asLiteral(a.name), asLiteral(''));\n      attributeMap[a.name] = a.value;\n    });\n\n    // Match directives on template attributes\n    if (this.directiveMatcher) {\n      const selector = createCssSelector('ng-template', attributeMap);\n      this.directiveMatcher.match(\n          selector, (cssSelector, staticType) => { this.directives.add(staticType); });\n    }\n\n    if (attributeNames.length) {\n      parameters.push(this.constantPool.getConstLiteral(o.literalArr(attributeNames), true));\n    }\n\n    // e.g. C(1, C1Template)\n    this.instruction(\n        this._creationCode, template.sourceSpan, R3.containerCreate,\n        ...trimTrailingNulls(parameters));\n\n    // e.g. p(1, 'forOf', ɵb(ctx.items));\n    const context = o.variable(CONTEXT_NAME);\n    template.inputs.forEach(input => {\n      const convertedBinding = this.convertPropertyBinding(context, input.value);\n      this.instruction(\n          this._bindingCode, template.sourceSpan, R3.elementProperty, o.literal(templateIndex),\n          o.literal(input.name), o.importExpr(R3.bind).callFn([convertedBinding]));\n    });\n\n    // Create the template function\n    const templateVisitor = new TemplateDefinitionBuilder(\n        this.outputCtx, this.constantPool, this.reflector, templateContext, this._bindingScope,\n        this.level + 1, contextName, templateName, [], this.directiveMatcher, this.directives,\n        this.pipeTypeByName, this.pipes);\n    const templateFunctionExpr =\n        templateVisitor.buildTemplateFunction(template.children, template.variables);\n    this._postfixCode.push(templateFunctionExpr.toDeclStmt(templateName, null));\n  }\n\n  // These should be handled in the template or element directly.\n  readonly visitReference = invalid;\n  readonly visitVariable = invalid;\n  readonly visitAttribute = invalid;\n  readonly visitBoundAttribute = invalid;\n  readonly visitBoundEvent = invalid;\n\n  visitBoundText(text: t.BoundText) {\n    const nodeIndex = this.allocateDataSlot();\n\n    this.instruction(this._creationCode, text.sourceSpan, R3.text, o.literal(nodeIndex));\n\n    this.instruction(\n        this._bindingCode, text.sourceSpan, R3.textCreateBound, o.literal(nodeIndex),\n        this.convertPropertyBinding(o.variable(CONTEXT_NAME), text.value));\n  }\n\n  visitText(text: t.Text) {\n    this.instruction(\n        this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()),\n        o.literal(text.value));\n  }\n\n  // When the content of the element is a single text node the translation can be inlined:\n  //\n  // `<p i18n=\"desc|mean\">some content</p>`\n  // compiles to\n  // ```\n  // /**\n  // * @desc desc\n  // * @meaning mean\n  // */\n  // const MSG_XYZ = goog.getMsg('some content');\n  // i0.ɵT(1, MSG_XYZ);\n  // ```\n  visitSingleI18nTextChild(text: t.Text, i18nMeta: string) {\n    const meta = parseI18nMeta(i18nMeta);\n    const variable = this.constantPool.getTranslation(text.value, meta);\n    this.instruction(\n        this._creationCode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()), variable);\n  }\n\n  private allocateDataSlot() { return this._dataIndex++; }\n  private bindingContext() { return `${this._bindingContext++}`; }\n\n  private instruction(\n      statements: o.Statement[], span: ParseSourceSpan|null, reference: o.ExternalReference,\n      ...params: o.Expression[]) {\n    statements.push(o.importExpr(reference, null, span).callFn(params, span).toStmt());\n  }\n\n  private convertPropertyBinding(implicit: o.Expression, value: AST): o.Expression {\n    const pipesConvertedValue = value.visit(this._valueConverter);\n    const convertedPropertyBinding = convertPropertyBinding(\n        this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple,\n        interpolate);\n    this._bindingCode.push(...convertedPropertyBinding.stmts);\n    return convertedPropertyBinding.currValExpr;\n  }\n}\n\nfunction getQueryPredicate(query: CompileQueryMetadata, outputCtx: OutputContext): o.Expression {\n  if (query.selectors.length > 1 || (query.selectors.length == 1 && query.selectors[0].value)) {\n    const selectors = query.selectors.map(value => value.value as string);\n    selectors.some(value => !value) && error('Found a type among the string selectors expected');\n    return outputCtx.constantPool.getConstLiteral(\n        o.literalArr(selectors.map(value => o.literal(value))));\n  }\n\n  if (query.selectors.length == 1) {\n    const first = query.selectors[0];\n    if (first.identifier) {\n      return outputCtx.importExpr(first.identifier.reference);\n    }\n  }\n\n  error('Unexpected query form');\n  return o.NULL_EXPR;\n}\n\nexport function createFactory(\n    type: CompileTypeMetadata, outputCtx: OutputContext, reflector: CompileReflector,\n    queries: CompileQueryMetadata[]): o.Expression {\n  let args: o.Expression[] = [];\n\n  const elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n  const templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n  const viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n\n  for (let dependency of type.diDeps) {\n    const token = dependency.token;\n    if (token) {\n      const tokenRef = tokenReference(token);\n      if (tokenRef === elementRef) {\n        args.push(o.importExpr(R3.injectElementRef).callFn([]));\n      } else if (tokenRef === templateRef) {\n        args.push(o.importExpr(R3.injectTemplateRef).callFn([]));\n      } else if (tokenRef === viewContainerRef) {\n        args.push(o.importExpr(R3.injectViewContainerRef).callFn([]));\n      } else if (dependency.isAttribute) {\n        args.push(o.importExpr(R3.injectAttribute).callFn([o.literal(dependency.token !.value)]));\n      } else {\n        const tokenValue =\n            token.identifier != null ? outputCtx.importExpr(tokenRef) : o.literal(tokenRef);\n        const directiveInjectArgs = [tokenValue];\n        const flags = extractFlags(dependency);\n        if (flags != core.InjectFlags.Default) {\n          // Append flag information if other than default.\n          directiveInjectArgs.push(o.literal(flags));\n        }\n        args.push(o.importExpr(R3.directiveInject).callFn(directiveInjectArgs));\n      }\n    } else {\n      unsupported('dependency without a token');\n    }\n  }\n\n  const queryDefinitions: o.Expression[] = [];\n  for (let query of queries) {\n    const predicate = getQueryPredicate(query, outputCtx);\n\n    // e.g. r3.Q(null, somePredicate, false) or r3.Q(null, ['div'], false)\n    const parameters = [\n      o.literal(null, o.INFERRED_TYPE),\n      predicate,\n      o.literal(query.descendants),\n    ];\n\n    if (query.read) {\n      parameters.push(outputCtx.importExpr(query.read.identifier !.reference));\n    }\n\n    queryDefinitions.push(o.importExpr(R3.query).callFn(parameters));\n  }\n\n  const createInstance = new o.InstantiateExpr(outputCtx.importExpr(type.reference), args);\n  const result = queryDefinitions.length > 0 ? o.literalArr([createInstance, ...queryDefinitions]) :\n                                               createInstance;\n\n  return o.fn(\n      [], [new o.ReturnStatement(result)], o.INFERRED_TYPE, null,\n      type.reference.name ? `${type.reference.name}_Factory` : null);\n}\n\nfunction extractFlags(dependency: CompileDiDependencyMetadata): core.InjectFlags {\n  let flags = core.InjectFlags.Default;\n  if (dependency.isHost) {\n    flags |= core.InjectFlags.Host;\n  }\n  if (dependency.isOptional) {\n    flags |= core.InjectFlags.Optional;\n  }\n  if (dependency.isSelf) {\n    flags |= core.InjectFlags.Self;\n  }\n  if (dependency.isSkipSelf) {\n    flags |= core.InjectFlags.SkipSelf;\n  }\n  if (dependency.isValue) {\n    unsupported('value dependencies');\n  }\n  return flags;\n}\n\n/**\n *  Remove trailing null nodes as they are implied.\n */\nfunction trimTrailingNulls(parameters: o.Expression[]): o.Expression[] {\n  while (o.isNull(parameters[parameters.length - 1])) {\n    parameters.pop();\n  }\n  return parameters;\n}\n\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector: string): o.Expression {\n  return asLiteral(core.parseSelectorToR3Selector(selector));\n}\n\nfunction createHostAttributesArray(\n    directiveMetadata: CompileDirectiveMetadata, outputCtx: OutputContext): o.Expression|null {\n  const values: o.Expression[] = [];\n  const attributes = directiveMetadata.hostAttributes;\n  for (let key of Object.getOwnPropertyNames(attributes)) {\n    const value = attributes[key];\n    values.push(o.literal(key), o.literal(value));\n  }\n  if (values.length > 0) {\n    return outputCtx.constantPool.getConstLiteral(o.literalArr(values));\n  }\n  return null;\n}\n\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(\n    directiveMetadata: CompileDirectiveMetadata, outputCtx: OutputContext,\n    bindingParser: BindingParser): o.Expression|null {\n  const statements: o.Statement[] = [];\n\n  const temporary = temporaryAllocator(statements, TEMPORARY_NAME);\n\n  const hostBindingSourceSpan = typeSourceSpan(\n      directiveMetadata.isComponent ? 'Component' : 'Directive', directiveMetadata.type);\n\n  // Calculate the queries\n  for (let index = 0; index < directiveMetadata.queries.length; index++) {\n    const query = directiveMetadata.queries[index];\n\n    // e.g. r3.qR(tmp = r3.ld(dirIndex)[1]) && (r3.ld(dirIndex)[0].someDir = tmp);\n    const getDirectiveMemory = o.importExpr(R3.load).callFn([o.variable('dirIndex')]);\n    // The query list is at the query index + 1 because the directive itself is in slot 0.\n    const getQueryList = getDirectiveMemory.key(o.literal(index + 1));\n    const assignToTemporary = temporary().set(getQueryList);\n    const callQueryRefresh = o.importExpr(R3.queryRefresh).callFn([assignToTemporary]);\n    const updateDirective = getDirectiveMemory.key(o.literal(0, o.INFERRED_TYPE))\n                                .prop(query.propertyName)\n                                .set(query.first ? temporary().prop('first') : temporary());\n    const andExpression = callQueryRefresh.and(updateDirective);\n    statements.push(andExpression.toStmt());\n  }\n\n  const directiveSummary = directiveMetadata.toSummary();\n\n  // Calculate the host property bindings\n  const bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n  const bindingContext = o.importExpr(R3.load).callFn([o.variable('dirIndex')]);\n  if (bindings) {\n    for (const binding of bindings) {\n      const bindingExpr = convertPropertyBinding(\n          null, bindingContext, binding.expression, 'b', BindingForm.TrySimple,\n          () => error('Unexpected interpolation'));\n      statements.push(...bindingExpr.stmts);\n      statements.push(o.importExpr(R3.elementProperty)\n                          .callFn([\n                            o.variable('elIndex'),\n                            o.literal(binding.name),\n                            o.importExpr(R3.bind).callFn([bindingExpr.currValExpr]),\n                          ])\n                          .toStmt());\n    }\n  }\n\n  // Calculate host event bindings\n  const eventBindings =\n      bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n  if (eventBindings) {\n    for (const binding of eventBindings) {\n      const bindingExpr = convertActionBinding(\n          null, bindingContext, binding.handler, 'b', () => error('Unexpected interpolation'));\n      const bindingName = binding.name && sanitizeIdentifier(binding.name);\n      const typeName = identifierName(directiveMetadata.type);\n      const functionName =\n          typeName && bindingName ? `${typeName}_${bindingName}_HostBindingHandler` : null;\n      const handler = o.fn(\n          [new o.FnParam('$event', o.DYNAMIC_TYPE)],\n          [...bindingExpr.stmts, new o.ReturnStatement(bindingExpr.allowDefault)], o.INFERRED_TYPE,\n          null, functionName);\n      statements.push(\n          o.importExpr(R3.listener).callFn([o.literal(binding.name), handler]).toStmt());\n    }\n  }\n\n  if (statements.length > 0) {\n    const typeName = directiveMetadata.type.reference.name;\n    return o.fn(\n        [\n          new o.FnParam('dirIndex', o.NUMBER_TYPE),\n          new o.FnParam('elIndex', o.NUMBER_TYPE),\n        ],\n        statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_HostBindings` : null);\n  }\n\n  return null;\n}\n\nclass ValueConverter extends AstMemoryEfficientTransformer {\n  constructor(\n      private outputCtx: OutputContext, private allocateSlot: () => number,\n      private definePipe:\n          (name: string, localName: string, slot: number, value: o.Expression) => void) {\n    super();\n  }\n\n  // AstMemoryEfficientTransformer\n  visitPipe(pipe: BindingPipe, context: any): AST {\n    // Allocate a slot to create the pipe\n    const slot = this.allocateSlot();\n    const slotPseudoLocal = `PIPE:${slot}`;\n    const target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n    const bindingId = pipeBinding(pipe.args);\n    this.definePipe(pipe.name, slotPseudoLocal, slot, o.importExpr(bindingId));\n    const value = pipe.exp.visit(this);\n    const args = this.visitAll(pipe.args);\n\n    return new FunctionCall(\n        pipe.span, target, [new LiteralPrimitive(pipe.span, slot), value, ...args]);\n  }\n\n  visitLiteralArray(array: LiteralArray, context: any): AST {\n    return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), values => {\n      // If the literal has calculated (non-literal) elements transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalArr(values);\n      return values.every(a => a.isConstant()) ?\n          this.outputCtx.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.outputCtx, literal);\n    });\n  }\n\n  visitLiteralMap(map: LiteralMap, context: any): AST {\n    return new BuiltinFunctionCall(map.span, this.visitAll(map.values), values => {\n      // If the literal has calculated (non-literal) elements  transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalMap(values.map(\n          (value, index) => ({key: map.keys[index].key, value, quoted: map.keys[index].quoted})));\n      return values.every(a => a.isConstant()) ?\n          this.outputCtx.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.outputCtx, literal);\n    });\n  }\n}\n\nfunction invalid<T>(arg: o.Expression | o.Statement | t.Node): never {\n  throw new Error(\n      `Invalid state: Visitor ${this.constructor.name} doesn't handle ${o.constructor.name}`);\n}\n\nfunction asLiteral(value: any): o.Expression {\n  if (Array.isArray(value)) {\n    return o.literalArr(value.map(asLiteral));\n  }\n  return o.literal(value, o.INFERRED_TYPE);\n}\n\nfunction conditionallyCreateMapObjectLiteral(keys: {[key: string]: string}): o.Expression|null {\n  if (Object.getOwnPropertyNames(keys).length > 0) {\n    return mapToExpression(keys);\n  }\n  return null;\n}\n\nfunction mapToExpression(map: {[key: string]: any}, quoted = false): o.Expression {\n  return o.literalMap(\n      Object.getOwnPropertyNames(map).map(key => ({key, quoted, value: asLiteral(map[key])})));\n}\n\n/**\n * Creates an allocator for a temporary variable.\n *\n * A variable declaration is added to the statements the first time the allocator is invoked.\n */\nfunction temporaryAllocator(statements: o.Statement[], name: string): () => o.ReadVarExpr {\n  let temp: o.ReadVarExpr|null = null;\n  return () => {\n    if (!temp) {\n      statements.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n      temp = o.variable(name);\n    }\n    return temp;\n  };\n}\n\n// Parse i18n metas like:\n// - \"@@id\",\n// - \"description[@@id]\",\n// - \"meaning|description[@@id]\"\nfunction parseI18nMeta(i18n?: string): {description?: string, id?: string, meaning?: string} {\n  let meaning: string|undefined;\n  let description: string|undefined;\n  let id: string|undefined;\n\n  if (i18n) {\n    // TODO(vicb): figure out how to force a message ID with closure ?\n    const idIndex = i18n.indexOf(ID_SEPARATOR);\n\n    const descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    let meaningAndDesc: string;\n    [meaningAndDesc, id] =\n        (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n    [meaning, description] = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc];\n  }\n\n  return {description, id, meaning};\n}\n\n/**\n * Creates a `CssSelector` given a tag name and a map of attributes\n */\nfunction createCssSelector(tag: string, attributes: {[name: string]: string}): CssSelector {\n  const cssSelector = new CssSelector();\n\n  cssSelector.setElement(tag);\n\n  Object.getOwnPropertyNames(attributes).forEach((name) => {\n    const value = attributes[name];\n\n    cssSelector.addAttribute(name, value);\n    if (name.toLowerCase() === 'class') {\n      const classes = value.trim().split(/\\s+/g);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  });\n\n  return cssSelector;\n}\n"]}