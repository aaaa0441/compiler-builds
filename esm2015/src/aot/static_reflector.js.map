{"version":3,"file":"static_reflector.js","sourceRoot":"","sources":["../../../../../packages/compiler/src/aot/static_reflector.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileSummaryKind} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {MetadataFactory, createAttribute, createComponent, createContentChild, createContentChildren, createDirective, createHost, createHostBinding, createHostListener, createInject, createInjectable, createInput, createNgModule, createOptional, createOutput, createPipe, createSelf, createSkipSelf, createViewChild, createViewChildren} from '../core';\nimport * as o from '../output/output_ast';\nimport {SummaryResolver} from '../summary_resolver';\nimport {syntaxError} from '../util';\n\nimport {FormattedMessageChain, formattedError} from './formatted_error';\nimport {StaticSymbol} from './static_symbol';\nimport {StaticSymbolResolver} from './static_symbol_resolver';\n\nconst ANGULAR_CORE = '@angular/core';\nconst ANGULAR_ROUTER = '@angular/router';\n\nconst HIDDEN_KEY = /^\\$.*\\$$/;\n\nconst IGNORE = {\n  __symbolic: 'ignore'\n};\n\nconst USE_VALUE = 'useValue';\nconst PROVIDE = 'provide';\nconst REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data', 'id', 'loadChildren']);\nconst TYPEGUARD_POSTFIX = 'TypeGuard';\nconst USE_IF = 'UseIf';\n\nfunction shouldIgnore(value: any): boolean {\n  return value && value.__symbolic == 'ignore';\n}\n\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector implements CompileReflector {\n  private annotationCache = new Map<StaticSymbol, any[]>();\n  private shallowAnnotationCache = new Map<StaticSymbol, any[]>();\n  private propertyCache = new Map<StaticSymbol, {[key: string]: any[]}>();\n  private parameterCache = new Map<StaticSymbol, any[]>();\n  private methodCache = new Map<StaticSymbol, {[key: string]: boolean}>();\n  private staticCache = new Map<StaticSymbol, string[]>();\n  private conversionMap = new Map<StaticSymbol, (context: StaticSymbol, args: any[]) => any>();\n  private resolvedExternalReferences = new Map<string, StaticSymbol>();\n  private injectionToken: StaticSymbol;\n  private opaqueToken: StaticSymbol;\n  ROUTES: StaticSymbol;\n  private ANALYZE_FOR_ENTRY_COMPONENTS: StaticSymbol;\n  private annotationForParentClassWithSummaryKind =\n      new Map<CompileSummaryKind, MetadataFactory<any>[]>();\n\n  constructor(\n      private summaryResolver: SummaryResolver<StaticSymbol>,\n      private symbolResolver: StaticSymbolResolver,\n      knownMetadataClasses: {name: string, filePath: string, ctor: any}[] = [],\n      knownMetadataFunctions: {name: string, filePath: string, fn: any}[] = [],\n      private errorRecorder?: (error: any, fileName?: string) => void) {\n    this.initializeConversionMap();\n    knownMetadataClasses.forEach(\n        (kc) => this._registerDecoratorOrConstructor(\n            this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n    knownMetadataFunctions.forEach(\n        (kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Directive, [createDirective, createComponent]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n    this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n    this.annotationForParentClassWithSummaryKind.set(\n        CompileSummaryKind.Injectable,\n        [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n  }\n\n  componentModuleUrl(typeOrFunc: StaticSymbol): string {\n    const staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n    return this.symbolResolver.getResourcePath(staticSymbol);\n  }\n\n  resolveExternalReference(ref: o.ExternalReference, containingFile?: string): StaticSymbol {\n    let key: string|undefined = undefined;\n    if (!containingFile) {\n      key = `${ref.moduleName}:${ref.name}`;\n      const declarationSymbol = this.resolvedExternalReferences.get(key);\n      if (declarationSymbol) return declarationSymbol;\n    }\n    const refSymbol =\n        this.symbolResolver.getSymbolByModule(ref.moduleName !, ref.name !, containingFile);\n    const declarationSymbol = this.findSymbolDeclaration(refSymbol);\n    if (!containingFile) {\n      this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, ref.moduleName !);\n      this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n    }\n    if (key) {\n      this.resolvedExternalReferences.set(key, declarationSymbol);\n    }\n    return declarationSymbol;\n  }\n\n  findDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.findSymbolDeclaration(\n        this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n  }\n\n  tryFindDeclaration(moduleUrl: string, name: string, containingFile?: string): StaticSymbol {\n    return this.symbolResolver.ignoreErrorsFor(\n        () => this.findDeclaration(moduleUrl, name, containingFile));\n  }\n\n  findSymbolDeclaration(symbol: StaticSymbol): StaticSymbol {\n    const resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n    if (resolvedSymbol) {\n      let resolvedMetadata = resolvedSymbol.metadata;\n      if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n        resolvedMetadata = resolvedMetadata.symbol;\n      }\n      if (resolvedMetadata instanceof StaticSymbol) {\n        return this.findSymbolDeclaration(resolvedSymbol.metadata);\n      }\n    }\n    return symbol;\n  }\n\n  public tryAnnotations(type: StaticSymbol): any[] {\n    const originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName: string) => {};\n    try {\n      return this.annotations(type);\n    } finally {\n      this.errorRecorder = originalRecorder;\n    }\n  }\n\n  public annotations(type: StaticSymbol): any[] {\n    return this._annotations(\n        type, (type: StaticSymbol, decorators: any) => this.simplify(type, decorators),\n        this.annotationCache);\n  }\n\n  public shallowAnnotations(type: StaticSymbol): any[] {\n    return this._annotations(\n        type, (type: StaticSymbol, decorators: any) => this.simplify(type, decorators, true),\n        this.shallowAnnotationCache);\n  }\n\n  private _annotations(\n      type: StaticSymbol, simplify: (type: StaticSymbol, decorators: any) => any,\n      annotationCache: Map<StaticSymbol, any[]>): any[] {\n    let annotations = annotationCache.get(type);\n    if (!annotations) {\n      annotations = [];\n      const classMetadata = this.getTypeMetadata(type);\n      const parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const parentAnnotations = this.annotations(parentType);\n        annotations.push(...parentAnnotations);\n      }\n      let ownAnnotations: any[] = [];\n      if (classMetadata['decorators']) {\n        ownAnnotations = simplify(type, classMetadata['decorators']);\n        if (ownAnnotations) {\n          annotations.push(...ownAnnotations);\n        }\n      }\n      if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n          this.summaryResolver.isLibraryFile(parentType.filePath)) {\n        const summary = this.summaryResolver.resolveSummary(parentType);\n        if (summary && summary.type) {\n          const requiredAnnotationTypes =\n              this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind !) !;\n          const typeHasRequiredAnnotation = requiredAnnotationTypes.some(\n              (requiredType) => ownAnnotations.some(ann => requiredType.isTypeOf(ann)));\n          if (!typeHasRequiredAnnotation) {\n            this.reportError(\n                formatMetadataError(\n                    metadataError(\n                        `Class ${type.name} in ${type.filePath} extends from a ${CompileSummaryKind[summary.type.summaryKind!]} in another compilation unit without duplicating the decorator`,\n                        /* summary */ undefined,\n                        `Please add a ${requiredAnnotationTypes.map((type) => type.ngMetadataName).join(' or ')} decorator to the class`),\n                    type),\n                type);\n          }\n        }\n      }\n      annotationCache.set(type, annotations.filter(ann => !!ann));\n    }\n    return annotations;\n  }\n\n  public propMetadata(type: StaticSymbol): {[key: string]: any[]} {\n    let propMetadata = this.propertyCache.get(type);\n    if (!propMetadata) {\n      const classMetadata = this.getTypeMetadata(type);\n      propMetadata = {};\n      const parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const parentPropMetadata = this.propMetadata(parentType);\n        Object.keys(parentPropMetadata).forEach((parentProp) => {\n          propMetadata ![parentProp] = parentPropMetadata[parentProp];\n        });\n      }\n\n      const members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const propData = members[propName];\n        const prop = (<any[]>propData)\n                         .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n        const decorators: any[] = [];\n        if (propMetadata ![propName]) {\n          decorators.push(...propMetadata ![propName]);\n        }\n        propMetadata ![propName] = decorators;\n        if (prop && prop['decorators']) {\n          decorators.push(...this.simplify(type, prop['decorators']));\n        }\n      });\n      this.propertyCache.set(type, propMetadata);\n    }\n    return propMetadata;\n  }\n\n  public parameters(type: StaticSymbol): any[] {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n      return [];\n    }\n    try {\n      let parameters = this.parameterCache.get(type);\n      if (!parameters) {\n        const classMetadata = this.getTypeMetadata(type);\n        const parentType = this.findParentType(type, classMetadata);\n        const members = classMetadata ? classMetadata['members'] : null;\n        const ctorData = members ? members['__ctor__'] : null;\n        if (ctorData) {\n          const ctor = (<any[]>ctorData).find(a => a['__symbolic'] == 'constructor');\n          const rawParameterTypes = <any[]>ctor['parameters'] || [];\n          const parameterDecorators = <any[]>this.simplify(type, ctor['parameterDecorators'] || []);\n          parameters = [];\n          rawParameterTypes.forEach((rawParamType, index) => {\n            const nestedResult: any[] = [];\n            const paramType = this.trySimplify(type, rawParamType);\n            if (paramType) nestedResult.push(paramType);\n            const decorators = parameterDecorators ? parameterDecorators[index] : null;\n            if (decorators) {\n              nestedResult.push(...decorators);\n            }\n            parameters !.push(nestedResult);\n          });\n        } else if (parentType) {\n          parameters = this.parameters(parentType);\n        }\n        if (!parameters) {\n          parameters = [];\n        }\n        this.parameterCache.set(type, parameters);\n      }\n      return parameters;\n    } catch (e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n\n  private _methodNames(type: any): {[key: string]: boolean} {\n    let methodNames = this.methodCache.get(type);\n    if (!methodNames) {\n      const classMetadata = this.getTypeMetadata(type);\n      methodNames = {};\n      const parentType = this.findParentType(type, classMetadata);\n      if (parentType) {\n        const parentMethodNames = this._methodNames(parentType);\n        Object.keys(parentMethodNames).forEach((parentProp) => {\n          methodNames ![parentProp] = parentMethodNames[parentProp];\n        });\n      }\n\n      const members = classMetadata['members'] || {};\n      Object.keys(members).forEach((propName) => {\n        const propData = members[propName];\n        const isMethod = (<any[]>propData).some(a => a['__symbolic'] == 'method');\n        methodNames ![propName] = methodNames ![propName] || isMethod;\n      });\n      this.methodCache.set(type, methodNames);\n    }\n    return methodNames;\n  }\n\n  private _staticMembers(type: StaticSymbol): string[] {\n    let staticMembers = this.staticCache.get(type);\n    if (!staticMembers) {\n      const classMetadata = this.getTypeMetadata(type);\n      const staticMemberData = classMetadata['statics'] || {};\n      staticMembers = Object.keys(staticMemberData);\n      this.staticCache.set(type, staticMembers);\n    }\n    return staticMembers;\n  }\n\n\n  private findParentType(type: StaticSymbol, classMetadata: any): StaticSymbol|undefined {\n    const parentType = this.trySimplify(type, classMetadata['extends']);\n    if (parentType instanceof StaticSymbol) {\n      return parentType;\n    }\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(\n              `hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`),\n          type);\n    }\n    try {\n      return !!this._methodNames(type)[lcProperty];\n    } catch (e) {\n      console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n      throw e;\n    }\n  }\n\n  guards(type: any): {[key: string]: StaticSymbol} {\n    if (!(type instanceof StaticSymbol)) {\n      this.reportError(\n          new Error(`guards received ${JSON.stringify(type)} which is not a StaticSymbol`), type);\n      return {};\n    }\n    const staticMembers = this._staticMembers(type);\n    const result: {[key: string]: StaticSymbol} = {};\n    for (let name of staticMembers) {\n      if (name.endsWith(TYPEGUARD_POSTFIX)) {\n        let property = name.substr(0, name.length - TYPEGUARD_POSTFIX.length);\n        let value: any;\n        if (property.endsWith(USE_IF)) {\n          property = name.substr(0, property.length - USE_IF.length);\n          value = USE_IF;\n        } else {\n          value = this.getStaticSymbol(type.filePath, type.name, [name]);\n        }\n        result[property] = value;\n      }\n    }\n    return result;\n  }\n\n  private _registerDecoratorOrConstructor(type: StaticSymbol, ctor: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => new ctor(...args));\n  }\n\n  private _registerFunction(type: StaticSymbol, fn: any): void {\n    this.conversionMap.set(type, (context: StaticSymbol, args: any[]) => fn.apply(undefined, args));\n  }\n\n  private initializeConversionMap(): void {\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n    this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n    this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n    this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n    this.ANALYZE_FOR_ENTRY_COMPONENTS =\n        this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n\n    // Note: Some metadata classes can be used directly with Provider.deps.\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n    this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n    this._registerDecoratorOrConstructor(\n        this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n  }\n\n  /**\n   * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n   * All types passed to the StaticResolver should be pseudo-types returned by this method.\n   *\n   * @param declarationFile the absolute path of the file where the symbol is declared\n   * @param name the name of the type.\n   */\n  getStaticSymbol(declarationFile: string, name: string, members?: string[]): StaticSymbol {\n    return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n  }\n\n  /**\n   * Simplify but discard any errors\n   */\n  private trySimplify(context: StaticSymbol, value: any): any {\n    const originalRecorder = this.errorRecorder;\n    this.errorRecorder = (error: any, fileName: string) => {};\n    const result = this.simplify(context, value);\n    this.errorRecorder = originalRecorder;\n    return result;\n  }\n\n  /** @internal */\n  public simplify(context: StaticSymbol, value: any, lazy: boolean = false): any {\n    const self = this;\n    let scope = BindingScope.empty;\n    const calling = new Map<StaticSymbol, boolean>();\n    const rootContext = context;\n\n    function simplifyInContext(\n        context: StaticSymbol, value: any, depth: number, references: number): any {\n      function resolveReferenceValue(staticSymbol: StaticSymbol): any {\n        const resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n        return resolvedSymbol ? resolvedSymbol.metadata : null;\n      }\n\n      function simplifyEagerly(value: any): any {\n        return simplifyInContext(context, value, depth, 0);\n      }\n\n      function simplifyLazily(value: any): any {\n        return simplifyInContext(context, value, depth, references + 1);\n      }\n\n      function simplifyNested(nestedContext: StaticSymbol, value: any): any {\n        if (nestedContext === context) {\n          // If the context hasn't changed let the exception propagate unmodified.\n          return simplifyInContext(nestedContext, value, depth + 1, references);\n        }\n        try {\n          return simplifyInContext(nestedContext, value, depth + 1, references);\n        } catch (e) {\n          if (isMetadataError(e)) {\n            // Propagate the message text up but add a message to the chain that explains how we got\n            // here.\n            // e.chain implies e.symbol\n            const summaryMsg = e.chain ? 'references \\'' + e.symbol !.name + '\\'' : errorSummary(e);\n            const summary = `'${nestedContext.name}' ${summaryMsg}`;\n            const chain = {message: summary, position: e.position, next: e.chain};\n            // TODO(chuckj): retrieve the position information indirectly from the collectors node\n            // map if the metadata is from a .ts file.\n            self.error(\n                {\n                  message: e.message,\n                  advise: e.advise,\n                  context: e.context, chain,\n                  symbol: nestedContext\n                },\n                context);\n          } else {\n            // It is probably an internal error.\n            throw e;\n          }\n        }\n      }\n\n      function simplifyCall(\n          functionSymbol: StaticSymbol, targetFunction: any, args: any[], targetExpression: any) {\n        if (targetFunction && targetFunction['__symbolic'] == 'function') {\n          if (calling.get(functionSymbol)) {\n            self.error(\n                {\n                  message: 'Recursion is not supported',\n                  summary: `called '${functionSymbol.name}' recursively`,\n                  value: targetFunction\n                },\n                functionSymbol);\n          }\n          try {\n            const value = targetFunction['value'];\n            if (value && (depth != 0 || value.__symbolic != 'error')) {\n              const parameters: string[] = targetFunction['parameters'];\n              const defaults: any[] = targetFunction.defaults;\n              args = args.map(arg => simplifyNested(context, arg))\n                         .map(arg => shouldIgnore(arg) ? undefined : arg);\n              if (defaults && defaults.length > args.length) {\n                args.push(...defaults.slice(args.length).map((value: any) => simplify(value)));\n              }\n              calling.set(functionSymbol, true);\n              const functionScope = BindingScope.build();\n              for (let i = 0; i < parameters.length; i++) {\n                functionScope.define(parameters[i], args[i]);\n              }\n              const oldScope = scope;\n              let result: any;\n              try {\n                scope = functionScope.done();\n                result = simplifyNested(functionSymbol, value);\n              } finally {\n                scope = oldScope;\n              }\n              return result;\n            }\n          } finally {\n            calling.delete(functionSymbol);\n          }\n        }\n\n        if (depth === 0) {\n          // If depth is 0 we are evaluating the top level expression that is describing element\n          // decorator. In this case, it is a decorator we don't understand, such as a custom\n          // non-angular decorator, and we should just ignore it.\n          return IGNORE;\n        }\n        let position: Position|undefined = undefined;\n        if (targetExpression && targetExpression.__symbolic == 'resolved') {\n          const line = targetExpression.line;\n          const character = targetExpression.character;\n          const fileName = targetExpression.fileName;\n          if (fileName != null && line != null && character != null) {\n            position = {fileName, line, column: character};\n          }\n        }\n        self.error(\n            {\n              message: FUNCTION_CALL_NOT_SUPPORTED,\n              context: functionSymbol,\n              value: targetFunction, position\n            },\n            context);\n      }\n\n      function simplify(expression: any): any {\n        if (isPrimitive(expression)) {\n          return expression;\n        }\n        if (expression instanceof Array) {\n          const result: any[] = [];\n          for (const item of (<any>expression)) {\n            // Check for a spread expression\n            if (item && item.__symbolic === 'spread') {\n              // We call with references as 0 because we require the actual value and cannot\n              // tolerate a reference here.\n              const spreadArray = simplifyEagerly(item.expression);\n              if (Array.isArray(spreadArray)) {\n                for (const spreadItem of spreadArray) {\n                  result.push(spreadItem);\n                }\n                continue;\n              }\n            }\n            const value = simplify(item);\n            if (shouldIgnore(value)) {\n              continue;\n            }\n            result.push(value);\n          }\n          return result;\n        }\n        if (expression instanceof StaticSymbol) {\n          // Stop simplification at builtin symbols or if we are in a reference context and\n          // the symbol doesn't have members.\n          if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n              (references > 0 && !expression.members.length)) {\n            return expression;\n          } else {\n            const staticSymbol = expression;\n            const declarationValue = resolveReferenceValue(staticSymbol);\n            if (declarationValue != null) {\n              return simplifyNested(staticSymbol, declarationValue);\n            } else {\n              return staticSymbol;\n            }\n          }\n        }\n        if (expression) {\n          if (expression['__symbolic']) {\n            let staticSymbol: StaticSymbol;\n            switch (expression['__symbolic']) {\n              case 'binop':\n                let left = simplify(expression['left']);\n                if (shouldIgnore(left)) return left;\n                let right = simplify(expression['right']);\n                if (shouldIgnore(right)) return right;\n                switch (expression['operator']) {\n                  case '&&':\n                    return left && right;\n                  case '||':\n                    return left || right;\n                  case '|':\n                    return left | right;\n                  case '^':\n                    return left ^ right;\n                  case '&':\n                    return left & right;\n                  case '==':\n                    return left == right;\n                  case '!=':\n                    return left != right;\n                  case '===':\n                    return left === right;\n                  case '!==':\n                    return left !== right;\n                  case '<':\n                    return left < right;\n                  case '>':\n                    return left > right;\n                  case '<=':\n                    return left <= right;\n                  case '>=':\n                    return left >= right;\n                  case '<<':\n                    return left << right;\n                  case '>>':\n                    return left >> right;\n                  case '+':\n                    return left + right;\n                  case '-':\n                    return left - right;\n                  case '*':\n                    return left * right;\n                  case '/':\n                    return left / right;\n                  case '%':\n                    return left % right;\n                }\n                return null;\n              case 'if':\n                let condition = simplify(expression['condition']);\n                return condition ? simplify(expression['thenExpression']) :\n                                   simplify(expression['elseExpression']);\n              case 'pre':\n                let operand = simplify(expression['operand']);\n                if (shouldIgnore(operand)) return operand;\n                switch (expression['operator']) {\n                  case '+':\n                    return operand;\n                  case '-':\n                    return -operand;\n                  case '!':\n                    return !operand;\n                  case '~':\n                    return ~operand;\n                }\n                return null;\n              case 'index':\n                let indexTarget = simplifyEagerly(expression['expression']);\n                let index = simplifyEagerly(expression['index']);\n                if (indexTarget && isPrimitive(index)) return indexTarget[index];\n                return null;\n              case 'select':\n                const member = expression['member'];\n                let selectContext = context;\n                let selectTarget = simplify(expression['expression']);\n                if (selectTarget instanceof StaticSymbol) {\n                  const members = selectTarget.members.concat(member);\n                  selectContext =\n                      self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                  const declarationValue = resolveReferenceValue(selectContext);\n                  if (declarationValue != null) {\n                    return simplifyNested(selectContext, declarationValue);\n                  } else {\n                    return selectContext;\n                  }\n                }\n                if (selectTarget && isPrimitive(member))\n                  return simplifyNested(selectContext, selectTarget[member]);\n                return null;\n              case 'reference':\n                // Note: This only has to deal with variable references, as symbol references have\n                // been converted into 'resolved'\n                // in the StaticSymbolResolver.\n                const name: string = expression['name'];\n                const localValue = scope.resolve(name);\n                if (localValue != BindingScope.missing) {\n                  return localValue;\n                }\n                break;\n              case 'resolved':\n                try {\n                  return simplify(expression.symbol);\n                } catch (e) {\n                  // If an error is reported evaluating the symbol record the position of the\n                  // reference in the error so it can\n                  // be reported in the error message generated from the exception.\n                  if (isMetadataError(e) && expression.fileName != null &&\n                      expression.line != null && expression.character != null) {\n                    e.position = {\n                      fileName: expression.fileName,\n                      line: expression.line,\n                      column: expression.character\n                    };\n                  }\n                  throw e;\n                }\n              case 'class':\n                return context;\n              case 'function':\n                return context;\n              case 'new':\n              case 'call':\n                // Determine if the function is a built-in conversion\n                staticSymbol = simplifyInContext(\n                    context, expression['expression'], depth + 1, /* references */ 0);\n                if (staticSymbol instanceof StaticSymbol) {\n                  if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                    // if somebody calls new InjectionToken, don't create an InjectionToken,\n                    // but rather return the symbol to which the InjectionToken is assigned to.\n\n                    // OpaqueToken is supported too as it is required by the language service to\n                    // support v4 and prior versions of Angular.\n                    return context;\n                  }\n                  const argExpressions: any[] = expression['arguments'] || [];\n                  let converter = self.conversionMap.get(staticSymbol);\n                  if (converter) {\n                    const args = argExpressions.map(arg => simplifyNested(context, arg))\n                                     .map(arg => shouldIgnore(arg) ? undefined : arg);\n                    return converter(context, args);\n                  } else {\n                    // Determine if the function is one we can simplify.\n                    const targetFunction = resolveReferenceValue(staticSymbol);\n                    return simplifyCall(\n                        staticSymbol, targetFunction, argExpressions, expression['expression']);\n                  }\n                }\n                return IGNORE;\n              case 'error':\n                let message = expression.message;\n                if (expression['line'] != null) {\n                  self.error(\n                      {\n                        message,\n                        context: expression.context,\n                        value: expression,\n                        position: {\n                          fileName: expression['fileName'],\n                          line: expression['line'],\n                          column: expression['character']\n                        }\n                      },\n                      context);\n                } else {\n                  self.error({message, context: expression.context}, context);\n                }\n                return IGNORE;\n              case 'ignore':\n                return expression;\n            }\n            return null;\n          }\n          return mapStringMap(expression, (value, name) => {\n            if (REFERENCE_SET.has(name)) {\n              if (name === USE_VALUE && PROVIDE in expression) {\n                // If this is a provider expression, check for special tokens that need the value\n                // during analysis.\n                const provide = simplify(expression.provide);\n                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                  return simplify(value);\n                }\n              }\n              return simplifyLazily(value);\n            }\n            return simplify(value);\n          });\n        }\n        return IGNORE;\n      }\n\n      return simplify(value);\n    }\n\n    let result: any;\n    try {\n      result = simplifyInContext(context, value, 0, lazy ? 1 : 0);\n    } catch (e) {\n      if (this.errorRecorder) {\n        this.reportError(e, context);\n      } else {\n        throw formatMetadataError(e, context);\n      }\n    }\n    if (shouldIgnore(result)) {\n      return undefined;\n    }\n    return result;\n  }\n\n  private getTypeMetadata(type: StaticSymbol): {[key: string]: any} {\n    const resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n    return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                                                       {__symbolic: 'class'};\n  }\n\n  private reportError(error: Error, context: StaticSymbol, path?: string) {\n    if (this.errorRecorder) {\n      this.errorRecorder(\n          formatMetadataError(error, context), (context && context.filePath) || path);\n    } else {\n      throw error;\n    }\n  }\n\n  private error(\n      {message, summary, advise, position, context, value, symbol, chain}: {\n        message: string,\n        summary?: string,\n        advise?: string,\n        position?: Position,\n        context?: any,\n        value?: any,\n        symbol?: StaticSymbol,\n        chain?: MetadataMessageChain\n      },\n      reportingContext: StaticSymbol) {\n    this.reportError(\n        metadataError(message, summary, advise, position, symbol, context, chain),\n        reportingContext);\n  }\n}\n\ninterface Position {\n  fileName: string;\n  line: number;\n  column: number;\n}\n\ninterface MetadataMessageChain {\n  message: string;\n  summary?: string;\n  position?: Position;\n  context?: any;\n  symbol?: StaticSymbol;\n  next?: MetadataMessageChain;\n}\n\ntype MetadataError = Error & {\n  position?: Position;\n  advise?: string;\n  summary?: string;\n  context?: any;\n  symbol?: StaticSymbol;\n  chain?: MetadataMessageChain;\n};\n\nconst METADATA_ERROR = 'ngMetadataError';\n\nfunction metadataError(\n    message: string, summary?: string, advise?: string, position?: Position, symbol?: StaticSymbol,\n    context?: any, chain?: MetadataMessageChain): MetadataError {\n  const error = syntaxError(message) as MetadataError;\n  (error as any)[METADATA_ERROR] = true;\n  if (advise) error.advise = advise;\n  if (position) error.position = position;\n  if (summary) error.summary = summary;\n  if (context) error.context = context;\n  if (chain) error.chain = chain;\n  if (symbol) error.symbol = symbol;\n  return error;\n}\n\nfunction isMetadataError(error: Error): error is MetadataError {\n  return !!(error as any)[METADATA_ERROR];\n}\n\nconst REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nconst VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nconst DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nconst COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nconst FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nconst REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nconst LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n\nfunction expandedMessage(message: string, context: any): string {\n  switch (message) {\n    case REFERENCE_TO_NONEXPORTED_CLASS:\n      if (context && context.className) {\n        return `References to a non-exported class are not supported in decorators but ${context.className} was referenced.`;\n      }\n      break;\n    case VARIABLE_NOT_INITIALIZED:\n      return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n    case DESTRUCTURE_NOT_SUPPORTED:\n      return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n    case COULD_NOT_RESOLVE_TYPE:\n      if (context && context.typeName) {\n        return `Could not resolve type ${context.typeName}`;\n      }\n      break;\n    case FUNCTION_CALL_NOT_SUPPORTED:\n      if (context && context.name) {\n        return `Function calls are not supported in decorators but '${context.name}' was called`;\n      }\n      return 'Function calls are not supported in decorators';\n    case REFERENCE_TO_LOCAL_SYMBOL:\n      if (context && context.name) {\n        return `Reference to a local (non-exported) symbols are not supported in decorators but '${context.name}' was referenced`;\n      }\n      break;\n    case LAMBDA_NOT_SUPPORTED:\n      return `Function expressions are not supported in decorators`;\n  }\n  return message;\n}\n\nfunction messageAdvise(message: string, context: any): string|undefined {\n  switch (message) {\n    case REFERENCE_TO_NONEXPORTED_CLASS:\n      if (context && context.className) {\n        return `Consider exporting '${context.className}'`;\n      }\n      break;\n    case DESTRUCTURE_NOT_SUPPORTED:\n      return 'Consider simplifying to avoid destructuring';\n    case REFERENCE_TO_LOCAL_SYMBOL:\n      if (context && context.name) {\n        return `Consider exporting '${context.name}'`;\n      }\n      break;\n    case LAMBDA_NOT_SUPPORTED:\n      return `Consider changing the function expression into an exported function`;\n  }\n  return undefined;\n}\n\nfunction errorSummary(error: MetadataError): string {\n  if (error.summary) {\n    return error.summary;\n  }\n  switch (error.message) {\n    case REFERENCE_TO_NONEXPORTED_CLASS:\n      if (error.context && error.context.className) {\n        return `references non-exported class ${error.context.className}`;\n      }\n      break;\n    case VARIABLE_NOT_INITIALIZED:\n      return 'is not initialized';\n    case DESTRUCTURE_NOT_SUPPORTED:\n      return 'is a destructured variable';\n    case COULD_NOT_RESOLVE_TYPE:\n      return 'could not be resolved';\n    case FUNCTION_CALL_NOT_SUPPORTED:\n      if (error.context && error.context.name) {\n        return `calls '${error.context.name}'`;\n      }\n      return `calls a function`;\n    case REFERENCE_TO_LOCAL_SYMBOL:\n      if (error.context && error.context.name) {\n        return `references local variable ${error.context.name}`;\n      }\n      return `references a local variable`;\n  }\n  return 'contains the error';\n}\n\nfunction mapStringMap(input: {[key: string]: any}, transform: (value: any, key: string) => any):\n    {[key: string]: any} {\n  if (!input) return {};\n  const result: {[key: string]: any} = {};\n  Object.keys(input).forEach((key) => {\n    const value = transform(input[key], key);\n    if (!shouldIgnore(value)) {\n      if (HIDDEN_KEY.test(key)) {\n        Object.defineProperty(result, key, {enumerable: false, configurable: true, value: value});\n      } else {\n        result[key] = value;\n      }\n    }\n  });\n  return result;\n}\n\nfunction isPrimitive(o: any): boolean {\n  return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n\ninterface BindingScopeBuilder {\n  define(name: string, value: any): BindingScopeBuilder;\n  done(): BindingScope;\n}\n\nabstract class BindingScope {\n  abstract resolve(name: string): any;\n  public static missing = {};\n  public static empty: BindingScope = {resolve: name => BindingScope.missing};\n\n  public static build(): BindingScopeBuilder {\n    const current = new Map<string, any>();\n    return {\n      define: function(name, value) {\n        current.set(name, value);\n        return this;\n      },\n      done: function() {\n        return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n      }\n    };\n  }\n}\n\nclass PopulatedScope extends BindingScope {\n  constructor(private bindings: Map<string, any>) { super(); }\n\n  resolve(name: string): any {\n    return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n  }\n}\n\nfunction formatMetadataMessageChain(\n    chain: MetadataMessageChain, advise: string | undefined): FormattedMessageChain {\n  const expanded = expandedMessage(chain.message, chain.context);\n  const nesting = chain.symbol ? ` in '${chain.symbol.name}'` : '';\n  const message = `${expanded}${nesting}`;\n  const position = chain.position;\n  const next: FormattedMessageChain|undefined = chain.next ?\n      formatMetadataMessageChain(chain.next, advise) :\n      advise ? {message: advise} : undefined;\n  return {message, position, next};\n}\n\nfunction formatMetadataError(e: Error, context: StaticSymbol): Error {\n  if (isMetadataError(e)) {\n    // Produce a formatted version of the and leaving enough information in the original error\n    // to recover the formatting information to eventually produce a diagnostic error message.\n    const position = e.position;\n    const chain: MetadataMessageChain = {\n      message: `Error during template compile of '${context.name}'`,\n      position: position,\n      next: {message: e.message, next: e.chain, context: e.context, symbol: e.symbol}\n    };\n    const advise = e.advise || messageAdvise(e.message, e.context);\n    return formattedError(formatMetadataMessageChain(chain, advise));\n  }\n  return e;\n}\n"]}