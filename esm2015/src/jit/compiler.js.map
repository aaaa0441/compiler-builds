{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../../packages/compiler/src/jit/compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompilePipeSummary, CompileProviderMetadata, CompileStylesheetMetadata, CompileTypeSummary, ProviderMeta, ProxyClass, identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {CompilerConfig} from '../config';\nimport {ConstantPool} from '../constant_pool';\nimport {Type} from '../core';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport * as ir from '../output/output_ast';\nimport {interpretStatements} from '../output/output_interpreter';\nimport {jitStatements} from '../output/output_jit';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {SummaryResolver} from '../summary_resolver';\nimport {TemplateAst} from '../template_parser/template_ast';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {Console, OutputContext, SyncAsync, stringify} from '../util';\nimport {ViewCompiler} from '../view_compiler/view_compiler';\n\nexport interface ModuleWithComponentFactories {\n  ngModuleFactory: object;\n  componentFactories: object[];\n}\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * @security  When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class JitCompiler {\n  private _compiledTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledHostTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledDirectiveWrapperCache = new Map<Type, Type>();\n  private _compiledNgModuleCache = new Map<Type, object>();\n  private _sharedStylesheetCount = 0;\n  private _addedAotSummaries = new Set<() => any[]>();\n\n  constructor(\n      private _metadataResolver: CompileMetadataResolver, private _templateParser: TemplateParser,\n      private _styleCompiler: StyleCompiler, private _viewCompiler: ViewCompiler,\n      private _ngModuleCompiler: NgModuleCompiler, private _summaryResolver: SummaryResolver<Type>,\n      private _reflector: CompileReflector, private _compilerConfig: CompilerConfig,\n      private _console: Console,\n      private getExtraNgModuleProviders: (ngModule: any) => CompileProviderMetadata[]) {}\n\n  compileModuleSync(moduleType: Type): object {\n    return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n  }\n\n  compileModuleAsync(moduleType: Type): Promise<object> {\n    return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n  }\n\n  compileModuleAndAllComponentsSync(moduleType: Type): ModuleWithComponentFactories {\n    return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n  }\n\n  compileModuleAndAllComponentsAsync(moduleType: Type): Promise<ModuleWithComponentFactories> {\n    return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n  }\n\n  getComponentFactory(component: Type): object {\n    const summary = this._metadataResolver.getDirectiveSummary(component);\n    return summary.componentFactory as object;\n  }\n\n  loadAotSummaries(summaries: () => any[]) {\n    this.clearCache();\n    this._addAotSummaries(summaries);\n  }\n\n  private _addAotSummaries(fn: () => any[]) {\n    if (this._addedAotSummaries.has(fn)) {\n      return;\n    }\n    this._addedAotSummaries.add(fn);\n    const summaries = fn();\n    for (let i = 0; i < summaries.length; i++) {\n      const entry = summaries[i];\n      if (typeof entry === 'function') {\n        this._addAotSummaries(entry);\n      } else {\n        const summary = entry as CompileTypeSummary;\n        this._summaryResolver.addSummary(\n            {symbol: summary.type.reference, metadata: null, type: summary});\n      }\n    }\n  }\n\n  hasAotSummary(ref: Type) { return !!this._summaryResolver.resolveSummary(ref); }\n\n  private _filterJitIdentifiers(ids: CompileIdentifierMetadata[]): any[] {\n    return ids.map(mod => mod.reference).filter((ref) => !this.hasAotSummary(ref));\n  }\n\n  private _compileModuleAndComponents(moduleType: Type, isSync: boolean): SyncAsync<object> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      this._compileComponents(moduleType, null);\n      return this._compileModule(moduleType);\n    });\n  }\n\n  private _compileModuleAndAllComponents(moduleType: Type, isSync: boolean):\n      SyncAsync<ModuleWithComponentFactories> {\n    return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n      const componentFactories: object[] = [];\n      this._compileComponents(moduleType, componentFactories);\n      return {\n        ngModuleFactory: this._compileModule(moduleType),\n        componentFactories: componentFactories\n      };\n    });\n  }\n\n  private _loadModules(mainModule: any, isSync: boolean): SyncAsync<any> {\n    const loading: Promise<any>[] = [];\n    const mainNgModule = this._metadataResolver.getNgModuleMetadata(mainModule) !;\n    // Note: for runtime compilation, we want to transitively compile all modules,\n    // so we also need to load the declared directives / pipes for all nested modules.\n    this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach((nestedNgModule) => {\n      // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n      const moduleMeta = this._metadataResolver.getNgModuleMetadata(nestedNgModule) !;\n      this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach((ref) => {\n        const promise =\n            this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n        if (promise) {\n          loading.push(promise);\n        }\n      });\n      this._filterJitIdentifiers(moduleMeta.declaredPipes)\n          .forEach((ref) => this._metadataResolver.getOrLoadPipeMetadata(ref));\n    });\n    return SyncAsync.all(loading);\n  }\n\n  private _compileModule(moduleType: Type): object {\n    let ngModuleFactory = this._compiledNgModuleCache.get(moduleType) !;\n    if (!ngModuleFactory) {\n      const moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType) !;\n      // Always provide a bound Compiler\n      const extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n      const outputCtx = createOutputContext();\n      const compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n      ngModuleFactory = this._interpretOrJit(\n          ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n\n  /**\n   * @internal\n   */\n  _compileComponents(mainModule: Type, allComponentFactories: object[]|null) {\n    const ngModule = this._metadataResolver.getNgModuleMetadata(mainModule) !;\n    const moduleByJitDirective = new Map<any, CompileNgModuleMetadata>();\n    const templates = new Set<CompiledTemplate>();\n\n    const transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n    transJitModules.forEach((localMod) => {\n      const localModuleMeta = this._metadataResolver.getNgModuleMetadata(localMod) !;\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        moduleByJitDirective.set(dirRef, localModuleMeta);\n        const dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          if (allComponentFactories) {\n            const template =\n                this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n            templates.add(template);\n            allComponentFactories.push(dirMeta.componentFactory as object);\n          }\n        }\n      });\n    });\n    transJitModules.forEach((localMod) => {\n      const localModuleMeta = this._metadataResolver.getNgModuleMetadata(localMod) !;\n      this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n        const dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n        if (dirMeta.isComponent) {\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            const moduleMeta = moduleByJitDirective.get(entryComponentType.componentType) !;\n            templates.add(\n                this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        if (!this.hasAotSummary(entryComponentType.componentType.reference)) {\n          const moduleMeta = moduleByJitDirective.get(entryComponentType.componentType) !;\n          templates.add(\n              this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n        }\n      });\n    });\n    templates.forEach((template) => this._compileTemplate(template));\n  }\n\n  clearCacheFor(type: Type) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    const compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n\n  clearCache(): void {\n    // Note: don't clear the _addedAotSummaries, as they don't change!\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._compiledNgModuleCache.clear();\n  }\n\n  private _createCompiledHostTemplate(compType: Type, ngModule: CompileNgModuleMetadata):\n      CompiledTemplate {\n    if (!ngModule) {\n      throw new Error(\n          `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n    let compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      const compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n\n      const hostMeta = this._metadataResolver.getHostComponentMetadata(\n          compMeta, (compMeta.componentFactory as any).viewDefFactory);\n      compiledTemplate =\n          new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    let compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const compMeta = template.compMeta;\n    const externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const outputContext = createOutputContext();\n    const componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n    compMeta.template !.externalStylesheets.forEach((stylesheetMeta) => {\n      const compiledStylesheet =\n          this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n      externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl !, compiledStylesheet);\n    });\n    this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n    const pipes = template.ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    const {template: parsedTemplate, pipes: usedPipes} =\n        this._parseTemplate(compMeta, template.ngModule, template.directives);\n    const compileResult = this._viewCompiler.compileComponent(\n        outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar),\n        usedPipes);\n    const evalResult = this._interpretOrJit(\n        templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n    const viewClass = evalResult[compileResult.viewClassVar];\n    const rendererType = evalResult[compileResult.rendererTypeVar];\n    template.compiled(viewClass, rendererType);\n  }\n\n  private _parseTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata,\n      directiveIdentifiers: CompileIdentifierMetadata[]):\n      {template: TemplateAst[], pipes: CompilePipeSummary[]} {\n    // Note: ! is ok here as components always have a template.\n    const preserveWhitespaces = compMeta.template !.preserveWhitespaces;\n    const directives =\n        directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const pipes = ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n    return this._templateParser.parse(\n        compMeta, compMeta.template !.htmlAst !, directives, pipes, ngModule.schemas,\n        templateSourceUrl(ngModule.type, compMeta, compMeta.template !), preserveWhitespaces);\n  }\n\n  private _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      const nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl) !;\n      const nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.setValue(nestedStylesArr);\n    });\n  }\n\n  private _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    return this._interpretOrJit(\n        sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++),\n        result.outputCtx.statements)[result.stylesVar];\n  }\n\n  private _interpretOrJit(sourceUrl: string, statements: ir.Statement[]): any {\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(statements, this._reflector);\n    } else {\n      return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n    }\n  }\n}\n\nclass CompiledTemplate {\n  private _viewClass: Function = null !;\n  isCompiled = false;\n\n  constructor(\n      public isHost: boolean, public compType: CompileIdentifierMetadata,\n      public compMeta: CompileDirectiveMetadata, public ngModule: CompileNgModuleMetadata,\n      public directives: CompileIdentifierMetadata[]) {}\n\n  compiled(viewClass: Function, rendererType: any) {\n    this._viewClass = viewClass;\n    (<ProxyClass>this.compMeta.componentViewType).setDelegate(viewClass);\n    for (let prop in rendererType) {\n      (<any>this.compMeta.rendererType)[prop] = rendererType[prop];\n    }\n    this.isCompiled = true;\n  }\n}\n\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n\nfunction createOutputContext(): OutputContext {\n  const importExpr = (symbol: any) =>\n      ir.importExpr({name: identifierName(symbol), moduleName: null, runtime: symbol});\n  return {statements: [], genFilePath: '', importExpr, constantPool: new ConstantPool()};\n}\n"]}